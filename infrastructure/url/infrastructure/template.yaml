AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: The Monster of the Week site infrastructure

Parameters:
  DomainName:
    Type: String
    Default: monsterplaybook.rip
  HostedZoneId:
    Type: String
    Default: Z0953270AK2JGXA33JIB
  CloudFronCert:
    Type: String
    Default: arn:aws:acm:us-east-1:625961017727:certificate/edd15537-9b78-4e21-a100-9ce277ca42bf
  Domain:
    Type: String
    AllowedPattern: (.*[.])*monsterplaybook.rip
  BranchName:
    Type: String

Mappings:
  AliasMap:
    staging:
      Alias: staging.monsterplaybook.rip
    production:
      Alias: monsterplaybook.rip

Resources:
  ##################### Lambda
  LambdaEdgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLambdaServiceToAssumeRole
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: EdgeLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
              - Action:
                  - lambda:EnableReplication*
                Effect: Allow
                Resource: '*'
              - Action:
                  - s3:*
                Effect: Allow
                Resource: "*"

  LambdaEdge:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist
      Role: !GetAtt LambdaEdgeRole.Arn
      Runtime: nodejs16.x
      Handler: index.handler
      Timeout: 5
      AutoPublishAlias: live

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref LambdaEdge]]

  ##################### CloudFront
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI from ${Domain}'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref Domain
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
            Headers:
                - Origin
            Cookies:
              Forward: none
          TargetOriginId: ui-bucket
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaEdge.Version
        DefaultRootObject: !Join ["", [!Ref BranchName, "/", index.html]]
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !ImportValue UiBucketDomainName
            Id: ui-bucket
            S3OriginConfig:
              OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref CloudFrontOAI]]
        Comment: The monster of the week cloud front distribution
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFronCert
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  ##################### DNS
  DnsName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Name: !Ref Domain
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt CloudFrontDistribution.DomainName

  ##################### Bucket
  UiBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !ImportValue UiBucketName
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub
              - "${BucketArn}/*"
              - BucketArn: !ImportValue UiBucketArn
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId